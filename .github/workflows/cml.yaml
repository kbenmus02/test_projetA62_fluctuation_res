name: projetA62
on:
  push:
    branches:
      - main
jobs:
  CI_generate_model:
    runs-on: ubuntu-latest
    container: docker://dvcorg/cml-py3:latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8.10'
      
      - name: intstall_requirements
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install -r requirements.txt
                    
      - name: upload data
        env:
          GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
        run: |
          dvc pull model
          ls -lrt model/
      
      - name: generate model and report.md
        run: |
          echo "# Metriques:" > report.md
          echo "# Matrice de Confusion:" > report2.md

          jupyter nbconvert --to notebook --execute notebook/iteration_4_generate_model_cnn.ipynb
          
          #pip freeze > requirements_docker.txt  #Pour avoir les versions des librairies dans Ubuntu.
          #python --version > python_version.txt  #Pour avoir les versions des librairies dans Ubuntu.
          echo "   " >> report.md
          echo "   " >> report.md
          cat report2.md >> report.md          
          ls -lrt

      - name: send model to remote storage
        env:
          GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
        run: |
          echo "push model"
          #dvc add model
          #dvc push
          
      - name: preparer_gitpush
        run: |
          git config --local user.email "$GITHUB_EMAIL"
          git config --local user.name "$GITHUB_USERNAME"
          #git add requirements_docker.txt python_version.txt report.md #Pour avoir les versions des librairies dans Ubuntu.
          git add report.md model.dvc notebook/iteration_4_generate_model_cnn.ipynb

          echo $(date +%Z)
          git commit --allow-empty -m "push model.dvc and report at $(date +%d-%b-%H_%M)"
          
          ################ ici attetion, changer la verions  #################
          git tag -a "v2.4.0" -m "generate model in github, $(date +%Z), at $(date +%d-%b-%Y--%H:%M:%S)"
          #######################################################################################
          
          git push --follow-tags

          #################################
          # creer dossier app, add origin 2 et push model.dvc vers origin 2
        
        env:
          GITHUB_USERNAME: "$GITHUB_USERNAME"
          GITHUB_EMAIL: "$GITHUB_EMAIL"